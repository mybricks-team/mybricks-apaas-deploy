'use strict';
const _0x403251 = _0x56b9;
function _0x56b9(_0x367008, _0x198885) {
    const _0x2bac1a = _0x3251();
    return _0x56b9 = function (_0x25301c, _0x1aa53c) {
        _0x25301c = _0x25301c - (0x80 * -0x2 + 0xe40 + -0xcc0);
        let _0x17e0a0 = _0x2bac1a[_0x25301c];
        return _0x17e0a0;
    }, _0x56b9(_0x367008, _0x198885);
}
(function (_0x290972, _0x58604c) {
    const _0x3ff2e3 = _0x56b9, _0x54ee14 = _0x290972();
    while (!![]) {
        try {
            const _0x4fbfdd = parseInt(_0x3ff2e3(0x8a)) / (0x37a * -0x2 + -0x20fb + 0x27f0) + -parseInt(_0x3ff2e3(0xa3)) / (-0x1baa + -0xfb5 * -0x2 + -0x3be) + parseInt(_0x3ff2e3(0x8f)) / (0x245d + -0x212c + 0x32e * -0x1) * (parseInt(_0x3ff2e3(0xb9)) / (-0x13fe + 0x1 * 0x155d + -0x15b)) + parseInt(_0x3ff2e3(0xb3)) / (-0x1 * 0x1ab9 + -0x3 * 0xeb + 0x1d7f) + parseInt(_0x3ff2e3(0x83)) / (0x1 * -0x1716 + -0xe * -0x2b1 + -0xe92) + -parseInt(_0x3ff2e3(0xb0)) / (-0x1dcd * -0x1 + 0x3 * 0x6df + -0x1 * 0x3263) + -parseInt(_0x3ff2e3(0x8c)) / (-0x137e + 0x484 * -0x1 + 0x180a);
            if (_0x4fbfdd === _0x58604c)
                break;
            else
                _0x54ee14['push'](_0x54ee14['shift']());
        } catch (_0x136c5f) {
            _0x54ee14['push'](_0x54ee14['shift']());
        }
    }
}(_0x3251, -0x15d * -0x1a8 + 0x34e62 + -0x29789));
Object[_0x403251(0xa9) + _0x403251(0xbd)](exports, _0x403251(0x9a), { 'value': !![] });
const crypto = require(_0x403251(0x95));
function lowercaseKeyHeader(_0x9ffc09) {
    const _0x3e959e = _0x403251, _0x32b263 = {};
    return _0x9ffc09 && Object[_0x3e959e(0x8e)](_0x9ffc09)[_0x3e959e(0x94)](_0x11448a => {
        const _0x16f9b8 = _0x3e959e;
        _0x32b263[_0x11448a[_0x16f9b8(0xb8) + 'e']()] = _0x9ffc09[_0x11448a];
    }), _0x32b263;
}
exports[_0x403251(0x8b) + _0x403251(0xb4) + _0x403251(0xa0)] = function buildCanonicalizedResource(_0x1d2599, _0x25582e) {
    const _0x5c6930 = _0x403251, _0x233dcc = {
            'FGLhM': function (_0x22ec7d, _0x560e3f) {
                return _0x22ec7d > _0x560e3f;
            },
            'RFmbY': function (_0x28636b, _0x37a82b) {
                return _0x28636b < _0x37a82b;
            },
            'jrYKb': function (_0x508015, _0x430026) {
                return _0x508015 + _0x430026;
            },
            'astho': function (_0x40e7a5, _0xc8adbc) {
                return _0x40e7a5 === _0xc8adbc;
            },
            'cDmxv': _0x5c6930(0x87),
            'YxCjE': function (_0x5ab26b, _0x29645a) {
                return _0x5ab26b !== _0x29645a;
            },
            'cYvji': function (_0x30d02e, _0x35b914) {
                return _0x30d02e + _0x35b914;
            }
        };
    let _0x5a8f13 = '' + _0x1d2599, _0x4edcde = '?';
    if (_0x233dcc[_0x5c6930(0xbb)](typeof _0x25582e, _0x233dcc[_0x5c6930(0xab)]) && _0x233dcc[_0x5c6930(0x89)](_0x25582e[_0x5c6930(0xa5)](), ''))
        _0x5a8f13 += _0x233dcc[_0x5c6930(0x9f)](_0x4edcde, _0x25582e);
    else {
        if (Array[_0x5c6930(0x99)](_0x25582e))
            _0x25582e[_0x5c6930(0x84)](), _0x5a8f13 += _0x233dcc[_0x5c6930(0x9f)](_0x4edcde, _0x25582e[_0x5c6930(0xa2)]('&'));
        else {
            if (_0x25582e) {
                const _0xafb249 = (_0x545e5f, _0x4c5fcb) => {
                        const _0x293ab1 = _0x5c6930;
                        if (_0x233dcc[_0x293ab1(0x81)](_0x545e5f[0x201c + -0x9 * 0x4d + -0x1d67], _0x4c5fcb[-0x1eae + -0x25b + 0x1 * 0x2109]))
                            return -0x22e7 + -0x21 * -0x17 + -0x1ff1 * -0x1;
                        else {
                            if (_0x233dcc[_0x293ab1(0xa8)](_0x545e5f[0x1 * -0xcdf + -0x382 * -0x4 + -0x1 * 0x129], _0x4c5fcb[0x1b9a * -0x1 + -0x107e * -0x1 + 0xb1c]))
                                return -(-0x7 * 0x1bb + 0x2 * -0xcf2 + 0xe * 0x2b7);
                        }
                        return -0x15a8 + -0x168a * -0x1 + -0xe2;
                    }, _0x26918c = _0x56179f => {
                        const _0x576fcb = _0x5c6930;
                        _0x5a8f13 += _0x233dcc[_0x576fcb(0x9c)](_0x4edcde, _0x56179f), (_0x25582e[_0x56179f] || _0x233dcc[_0x576fcb(0xbb)](_0x25582e[_0x56179f], -0x841 + 0x1f * 0xa5 + -0xbba)) && (_0x5a8f13 += '=' + _0x25582e[_0x56179f]), _0x4edcde = '&';
                    };
                Object[_0x5c6930(0x8e)](_0x25582e)[_0x5c6930(0x84)](_0xafb249)[_0x5c6930(0x94)](_0x26918c);
            }
        }
    }
    return _0x5a8f13;
}, exports[_0x403251(0x8b) + _0x403251(0xb7)] = function canonicalString(_0x5f2926, _0x4378ff, _0x1002d6, _0x324bca) {
    const _0x186390 = _0x403251, _0x178ad5 = {
            'qSHtT': function (_0x1dc3a1, _0x441232) {
                return _0x1dc3a1 === _0x441232;
            },
            'lqdrD': function (_0x33cd21, _0xf0dcf4) {
                return _0x33cd21(_0xf0dcf4);
            },
            'reMDG': function (_0x36a200, _0x4e1461) {
                return _0x36a200 || _0x4e1461;
            },
            'mGEjr': _0x186390(0x9b),
            'IFkXT': _0x186390(0x9d) + '5',
            'bLQGc': _0x186390(0x82) + 'pe',
            'jaMmc': _0x186390(0xad)
        };
    _0x1002d6 = _0x178ad5[_0x186390(0x86)](_0x1002d6, {});
    const _0x2da3cd = _0x178ad5[_0x186390(0xb6)](lowercaseKeyHeader, _0x1002d6[_0x186390(0xa6)]), _0x123a38 = _0x178ad5[_0x186390(0xb2)], _0x9646d1 = [], _0x259b99 = {};
    let _0x53eaea = [
        _0x5f2926[_0x186390(0x91) + 'e'](),
        _0x2da3cd[_0x178ad5[_0x186390(0xb5)]] || '',
        _0x2da3cd[_0x178ad5[_0x186390(0xa4)]],
        _0x324bca || _0x2da3cd[_0x178ad5[_0x186390(0x88)]]
    ];
    return Object[_0x186390(0x8e)](_0x2da3cd)[_0x186390(0x94)](_0xc22ab8 => {
        const _0xe005c7 = _0x186390, _0x4475b7 = _0xc22ab8[_0xe005c7(0xb8) + 'e']();
        _0x178ad5[_0xe005c7(0xa1)](_0x4475b7[_0xe005c7(0xba)](_0x123a38), -0xe3 * -0xf + 0xb52 + -0x189f) && (_0x259b99[_0x4475b7] = _0x178ad5[_0xe005c7(0xb6)](String, _0x2da3cd[_0xc22ab8])[_0xe005c7(0xa5)]());
    }), Object[_0x186390(0x8e)](_0x259b99)[_0x186390(0x84)]()[_0x186390(0x94)](_0x5162d9 => {
        const _0x1644a1 = _0x186390;
        _0x9646d1[_0x1644a1(0x98)](_0x5162d9 + ':' + _0x259b99[_0x5162d9]);
    }), _0x53eaea = _0x53eaea[_0x186390(0x93)](_0x9646d1), _0x53eaea[_0x186390(0x98)](this[_0x186390(0x8b) + _0x186390(0xb4) + _0x186390(0xa0)](_0x4378ff, _0x1002d6[_0x186390(0x96)])), _0x53eaea[_0x186390(0xa2)]('\x0a');
}, exports[_0x403251(0xbc) + _0x403251(0xac)] = function computeSignature(_0x446436, _0x5a9338, _0x4e58d4 = _0x403251(0xaa)) {
    const _0x966862 = _0x403251, _0x415bf2 = {
            'lSLOr': _0x966862(0xa7),
            'QRDDV': _0x966862(0x90)
        }, _0x39b704 = crypto[_0x966862(0xaf)](_0x415bf2[_0x966862(0x92)], _0x446436);
    return _0x39b704[_0x966862(0x9e)](Buffer[_0x966862(0x85)](_0x5a9338, _0x4e58d4))[_0x966862(0x97)](_0x415bf2[_0x966862(0x80)]);
}, exports[_0x403251(0xae) + _0x403251(0xb1)] = function authorization(_0xe5d4db, _0x117998, _0x1a473d, _0x2bbd99) {
    const _0x508b95 = _0x403251;
    return _0x508b95(0x8d) + _0xe5d4db + ':' + this[_0x508b95(0xbc) + _0x508b95(0xac)](_0x117998, _0x1a473d, _0x2bbd99);
};
function _0x3251() {
    const _0xcd95aa = [
        'x-oss-',
        'jrYKb',
        'content-md',
        'update',
        'cYvji',
        'source',
        'qSHtT',
        'join',
        '383756JmixGL',
        'bLQGc',
        'trim',
        'headers',
        'sha1',
        'RFmbY',
        'defineProp',
        'utf-8',
        'cDmxv',
        'nature',
        'x-oss-date',
        'authorizat',
        'createHmac',
        '1974595XpSfKg',
        'ion',
        'mGEjr',
        '1469695pnaMyh',
        'icalizedRe',
        'IFkXT',
        'lqdrD',
        'icalString',
        'toLowerCas',
        '436nhOwdy',
        'indexOf',
        'astho',
        'computeSig',
        'erty',
        'QRDDV',
        'FGLhM',
        'content-ty',
        '1727964fdKlZd',
        'sort',
        'from',
        'reMDG',
        'string',
        'jaMmc',
        'YxCjE',
        '145905QIDVns',
        'buildCanon',
        '3120984RgJbzj',
        'OSS\x20',
        'keys',
        '9111tigGpf',
        'base64',
        'toUpperCas',
        'lSLOr',
        'concat',
        'forEach',
        'crypto',
        'parameters',
        'digest',
        'push',
        'isArray',
        '__esModule'
    ];
    _0x3251 = function () {
        return _0xcd95aa;
    };
    return _0x3251();
}